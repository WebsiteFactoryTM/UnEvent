/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | "Pacific/Midway"
  | "Pacific/Niue"
  | "Pacific/Honolulu"
  | "Pacific/Rarotonga"
  | "America/Anchorage"
  | "Pacific/Gambier"
  | "America/Los_Angeles"
  | "America/Tijuana"
  | "America/Denver"
  | "America/Phoenix"
  | "America/Chicago"
  | "America/Guatemala"
  | "America/New_York"
  | "America/Bogota"
  | "America/Caracas"
  | "America/Santiago"
  | "America/Buenos_Aires"
  | "America/Sao_Paulo"
  | "Atlantic/South_Georgia"
  | "Atlantic/Azores"
  | "Atlantic/Cape_Verde"
  | "Europe/London"
  | "Europe/Berlin"
  | "Africa/Lagos"
  | "Europe/Athens"
  | "Africa/Cairo"
  | "Europe/Moscow"
  | "Asia/Riyadh"
  | "Asia/Dubai"
  | "Asia/Baku"
  | "Asia/Karachi"
  | "Asia/Tashkent"
  | "Asia/Calcutta"
  | "Asia/Dhaka"
  | "Asia/Almaty"
  | "Asia/Jakarta"
  | "Asia/Bangkok"
  | "Asia/Shanghai"
  | "Asia/Singapore"
  | "Asia/Tokyo"
  | "Asia/Seoul"
  | "Australia/Brisbane"
  | "Australia/Sydney"
  | "Pacific/Guam"
  | "Pacific/Noumea"
  | "Pacific/Auckland"
  | "Pacific/Fiji"

export interface Config {
  auth: {
    users: UserAuthOperations
  }
  blocks: {}
  collections: {
    users: User
    media: Media
    profiles: Profile
    favorites: Favorite
    "listing-types": ListingType
    cities: City
    events: Event
    locations: Location
    services: Service
    facilities: Facility
    "metrics-daily": MetricsDaily
    aggregates: Aggregate
    "listing-rank": ListingRank
    reviews: Review
    search: Search
    "payload-locked-documents": PayloadLockedDocument
    "payload-preferences": PayloadPreference
    "payload-migrations": PayloadMigration
  }
  collectionsJoins: {}
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>
    media: MediaSelect<false> | MediaSelect<true>
    profiles: ProfilesSelect<false> | ProfilesSelect<true>
    favorites: FavoritesSelect<false> | FavoritesSelect<true>
    "listing-types": ListingTypesSelect<false> | ListingTypesSelect<true>
    cities: CitiesSelect<false> | CitiesSelect<true>
    events: EventsSelect<false> | EventsSelect<true>
    locations: LocationsSelect<false> | LocationsSelect<true>
    services: ServicesSelect<false> | ServicesSelect<true>
    facilities: FacilitiesSelect<false> | FacilitiesSelect<true>
    "metrics-daily": MetricsDailySelect<false> | MetricsDailySelect<true>
    aggregates: AggregatesSelect<false> | AggregatesSelect<true>
    "listing-rank": ListingRankSelect<false> | ListingRankSelect<true>
    reviews: ReviewsSelect<false> | ReviewsSelect<true>
    search: SearchSelect<false> | SearchSelect<true>
    "payload-locked-documents": PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>
    "payload-preferences": PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>
    "payload-migrations": PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>
  }
  db: {
    defaultIDType: number
  }
  globals: {}
  globalsSelect: {}
  locale: null
  user: User & {
    collection: "users"
  }
  jobs: {
    tasks: unknown
    workflows: unknown
  }
}

export interface UserAuthOperations {
  forgotPassword: {
    email: string
    password: string
  }
  login: {
    email: string
    password: string
  }
  registerFirstUser: {
    email: string
    password: string
  }
  unlock: {
    email: string
    password: string
  }
}

export interface User {
  id: number
  displayName?: string | null
  profile?: (number | null) | Profile
  avatarURL?: string | null
  roles: ("organizer" | "host" | "provider" | "client" | "admin")[]
  status?: ("active" | "pending" | "suspended") | null
  agreeTermsAndConditions: boolean
  agreePrivacyPolicy: boolean
  updatedAt: string
  createdAt: string
  email: string
  resetPasswordToken?: string | null
  resetPasswordExpiration?: string | null
  salt?: string | null
  hash?: string | null
  loginAttempts?: number | null
  lockUntil?: string | null
  sessions?:
    | {
        id: string
        createdAt?: string | null
        expiresAt: string
      }[]
    | null
  password?: string | null
}

export interface Profile {
  id: number
  user: number | User
  userType?: ("organizer" | "host" | "provider" | "client")[] | null
  /**
   * Full name or business name
   */
  name: string
  /**
   * Profile avatar
   */
  avatar?: (number | null) | Media
  /**
   * Display name
   */
  displayName?: string | null
  /**
   * Short bio or tagline
   */
  bio?: string | null
  /**
   * Primary contact number
   */
  phone?: string | null
  /**
   * Personal or business website
   */
  website?: string | null
  /**
   * Primary city of operation
   */
  city?: string | null
  socialMedia?: {
    /**
     * Facebook profile/page URL
     */
    facebook?: string | null
    /**
     * Instagram profile URL
     */
    instagram?: string | null
    /**
     * LinkedIn profile URL
     */
    linkedin?: string | null
    /**
     * YouTube channel URL
     */
    youtube?: string | null
    /**
     * TikTok profile URL
     */
    tiktok?: string | null
    /**
     * Twitch profile URL
     */
    twitch?: string | null
    /**
     * X profile URL
     */
    x?: string | null
  }
  verified?: {
    status?: ("none" | "pending" | "approved" | "rejected") | null
    documents?:
      | {
          type?: ("id" | "company" | "other") | null
          file: number | Media
          notes?: string | null
          id?: string | null
        }[]
      | null
    verificationData?: {
      fullName?: string | null
      address?: string | null
      isCompany?: boolean | null
      companyName?: string | null
      cui?: string | null
      companyAddress?: string | null
    }
  }
  rating?: {
    average?: number | null
    count?: number | null
  }
  favorites?: (number | Favorite)[] | null
  memberSince?: string | null
  lastOnline?: string | null
  views?: number | null
  updatedAt: string
  createdAt: string
}

export interface Media {
  id: number
  alt: string
  updatedAt: string
  createdAt: string
  url?: string | null
  thumbnailURL?: string | null
  filename?: string | null
  mimeType?: string | null
  filesize?: number | null
  width?: number | null
  height?: number | null
  focalX?: number | null
  focalY?: number | null
}

export interface Favorite {
  id: number
  user?: (number | null) | User
  createdAt: string
  updatedAt: string
}

export interface ListingType {
  id: number
  /**
   * URL-friendly identifier (e.g., logodna, sala-evenimente)
   */
  slug: string
  /**
   * Display name (e.g., Logodnă, Sală de evenimente)
   */
  title: string
  /**
   * Category header (e.g., NUNȚI & CEREMONII DE FAMILIE)
   */
  category: string
  /**
   * Slugified category name
   */
  categorySlug: string
  /**
   * Which taxonomy type this belongs to
   */
  type: "events" | "locations" | "services"
  /**
   * Order within category (maintains the defined hierarchy)
   */
  sortOrder: number
  /**
   * Whether this taxonomy item is active/available
   */
  isActive?: boolean | null
  updatedAt: string
  createdAt: string
}

export interface PayloadLockedDocument {
  id: number
  document?:
    | ({
        relationTo: "users"
        value: number | User
      } | null)
    | ({
        relationTo: "media"
        value: number | Media
      } | null)
    | ({
        relationTo: "profiles"
        value: number | Profile
      } | null)
    | ({
        relationTo: "favorites"
        value: number | Favorite
      } | null)
    | ({
        relationTo: "listing-types"
        value: number | ListingType
      } | null)
  globalSlug?: string | null
  user: {
    relationTo: "users"
    value: number | User
  }
  updatedAt: string
  createdAt: string
}

export interface PayloadPreference {
  id: number
  user: {
    relationTo: "users"
    value: number | User
  }
  key?: string | null
  value?:
    | {
        [k: string]: unknown
      }
    | unknown[]
    | string
    | number
    | boolean
    | null
  updatedAt: string
  createdAt: string
}

export interface PayloadMigration {
  id: number
  name?: string | null
  batch?: number | null
  updatedAt: string
  createdAt: string
}

export interface City {
  id: number
  name: string
  slug: string
  updatedAt: string
  createdAt: string
}

export interface Event {
  id: number
  title: string
  slug: string
  description: string
  date: string
  location: number | Location
  organizer: number | User
  services: (number | Service)[]
  facilities: (number | Facility)[]
  reviews: (number | Review)[]
  rating?: {
    average?: number | null
    count?: number | null
  }
  updatedAt: string
  createdAt: string
}

export interface Location {
  id: number
  name: string
  slug: string
  address: string
  city: number | City
  services: (number | Service)[]
  facilities: (number | Facility)[]
  events: (number | Event)[]
  rating?: {
    average?: number | null
    count?: number | null
  }
  updatedAt: string
  createdAt: string
}

export interface Service {
  id: number
  name: string
  slug: string
  description: string
  type: "events" | "locations"
  location?: number | Location
  event?: number | Event
  rating?: {
    average?: number | null
    count?: number | null
  }
  updatedAt: string
  createdAt: string
}

export interface Facility {
  id: number
  name: string
  slug: string
  description: string
  location: number | Location
  event: number | Event
  rating?: {
    average?: number | null
    count?: number | null
  }
  updatedAt: string
  createdAt: string
}

export interface MetricsDaily {
  id: number
  date: string
  views: number
  clicks: number
  updatedAt: string
  createdAt: string
}

export interface Aggregate {
  id: number
  name: string
  slug: string
  description: string
  type: "city" | "service" | "facility"
  city?: number | City
  service?: number | Service
  facility?: number | Facility
  rating?: {
    average?: number | null
    count?: number | null
  }
  updatedAt: string
  createdAt: string
}

export interface ListingRank {
  id: number
  listing: number | ListingType
  rank: number
  updatedAt: string
  createdAt: string
}

export interface Review {
  id: number
  listing: number | ListingType
  user: number | User
  rating: number
  comment: string
  updatedAt: string
  createdAt: string
}

export interface Search {
  id: number
  query: string
  results: (number | ListingType)[]
  updatedAt: string
  createdAt: string
}

export interface UsersSelect<T extends boolean = true> {
  displayName?: T
  profile?: T
  avatarURL?: T
  roles?: T
  status?: T
  agreeTermsAndConditions?: T
  agreePrivacyPolicy?: T
  updatedAt?: T
  createdAt?: T
  email?: T
  resetPasswordToken?: T
  resetPasswordExpiration?: T
  salt?: T
  hash?: T
  loginAttempts?: T
  lockUntil?: T
  sessions?:
    | T
    | {
        id?: T
        createdAt?: T
        expiresAt?: T
      }
}

export interface MediaSelect<T extends boolean = true> {
  alt?: T
  updatedAt?: T
  createdAt?: T
  url?: T
  thumbnailURL?: T
  filename?: T
  mimeType?: T
  filesize?: T
  width?: T
  height?: T
  focalX?: T
  focalY?: T
}

export interface ProfilesSelect<T extends boolean = true> {
  user?: T
  userType?: T
  name?: T
  avatar?: T
  displayName?: T
  bio?: T
  phone?: T
  website?: T
  city?: T
  socialMedia?:
    | T
    | {
        facebook?: T
        instagram?: T
        linkedin?: T
        youtube?: T
        tiktok?: T
        twitch?: T
        x?: T
      }
  verified?:
    | T
    | {
        status?: T
        documents?:
          | T
          | {
              type?: T
              file?: T
              notes?: T
              id?: T
            }
        verificationData?:
          | T
          | {
              fullName?: T
              address?: T
              isCompany?: T
              companyName?: T
              cui?: T
              companyAddress?: T
            }
      }
  rating?:
    | T
    | {
        average?: T
        count?: T
      }
  favorites?: T
  memberSince?: T
  lastOnline?: T
  views?: T
  updatedAt?: T
  createdAt?: T
}

export interface FavoritesSelect<T extends boolean = true> {
  user?: T
  createdAt?: T
  updatedAt?: T
}

export interface ListingTypesSelect<T extends boolean = true> {
  slug?: T
  title?: T
  category?: T
  categorySlug?: T
  type?: T
  sortOrder?: T
  isActive?: T
  updatedAt?: T
  createdAt?: T
}

export interface CitiesSelect<T extends boolean = true> {
  name?: T
  slug?: T
  updatedAt?: T
  createdAt?: T
}

export interface EventsSelect<T extends boolean = true> {
  title?: T
  slug?: T
  description?: T
  date?: T
  location?: T
  organizer?: T
  services?: T
  facilities?: T
  reviews?: T
  rating?: T
  updatedAt?: T
  createdAt?: T
}

export interface LocationsSelect<T extends boolean = true> {
  name?: T
  slug?: T
  address?: T
  city?: T
  services?: T
  facilities?: T
  events?: T
  rating?: T
  updatedAt?: T
  createdAt?: T
}

export interface ServicesSelect<T extends boolean = true> {
  name?: T
  slug?: T
  description?: T
  type?: T
  location?: T
  event?: T
  rating?: T
  updatedAt?: T
  createdAt?: T
}

export interface FacilitiesSelect<T extends boolean = true> {
  name?: T
  slug?: T
  description?: T
  location?: T
  event?: T
  rating?: T
  updatedAt?: T
  createdAt?: T
}

export interface MetricsDailySelect<T extends boolean = true> {
  date?: T
  views?: T
  clicks?: T
  updatedAt?: T
  createdAt?: T
}

export interface AggregatesSelect<T extends boolean = true> {
  name?: T
  slug?: T
  description?: T
  type?: T
  city?: T
  service?: T
  facility?: T
  rating?: T
  updatedAt?: T
  createdAt?: T
}

export interface ListingRankSelect<T extends boolean = true> {
  listing?: T
  rank?: T
  updatedAt?: T
  createdAt?: T
}

export interface ReviewsSelect<T extends boolean = true> {
  listing?: T
  user?: T
  rating?: T
  comment?: T
  updatedAt?: T
  createdAt?: T
}

export interface SearchSelect<T extends boolean = true> {
  query?: T
  results?: T
  updatedAt?: T
  createdAt?: T
}

export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T
  globalSlug?: T
  user?: T
  updatedAt?: T
  createdAt?: T
}

export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T
  key?: T
  value?: T
  updatedAt?: T
  createdAt?: T
}

export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T
  batch?: T
  updatedAt?: T
  createdAt?: T
}

export interface Auth {
  [k: string]: unknown
}

declare module "payload" {
  export interface GeneratedTypes extends Config {}
}
